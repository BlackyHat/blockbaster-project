{"mappings":"oeAAAA,EAAA,S,6BAIA,EAAAC,EAAAC,gBAEA,MAAMC,EAAYC,SAASC,cAAc,eAiBzC,SAASC,EAAUC,GACjB,MAAMC,EAAOC,aAAaC,QAAQH,GAClC,OAAIC,EAAaG,KAAKC,MAAMJ,GACrB,E,CAGT,SAASK,EAAaL,GACpB,MAAMM,EAASN,EACZO,KAAIC,IACH,MAAMC,EAAO,IAAIC,KAAKF,EAAGG,cACzB,IAAIC,EAAa,GAgBjB,OAdKJ,EAAGK,QAAQC,OAWdF,EAAaJ,EAAGK,OAAON,KAAI,EAACQ,KAAEA,KAAWA,KAVzCP,EAAGQ,UAAUC,SAAQC,IACPC,gBAAgBC,iBAAiBP,OACzCI,SAAQ,EAACI,GAAEA,EAAEN,KAAEA,MACbM,IAAOH,GACTN,EAAWU,KAAKP,EAAK,GAEvB,IAEJH,EAAaA,EAAWW,MAAM,EAAG,IAK5B,iCAAiCf,EAAGa,2GAG3Bb,EAAGgB,kKAIgBhB,EAAGiB,8EAGxBb,EAAWc,KAAK,WAAWjB,EAAKkB,kGAKxC,IAEPD,KAAK,IAEa9B,SAASC,cAAc,mBAC/B+B,UAAYtB,C,CA7D3BD,EAAaP,EAAU,YAEvBH,EAAUkC,iBAAiB,SAASC,IAClC,MAAMC,EAASD,EAAIC,OAAOC,QAAQ,UAClC,IAAKD,EAAQ,OAAO,EAEpB,MAAME,EAAYF,EAAOG,QAAQnC,KACjCgC,EACGC,QAAQ,MACRnC,cAAc,cACdsC,UAAUC,OAAO,aACpBL,EAAOI,UAAUE,IAAI,aACrBhC,EAAaP,EAAUmC,GAAW,IAqDlCK,OAAOT,iBAAiB,WAAWC,IACjC,MAAMG,EAAYrC,SAASC,cAAc,0BAA0BqC,QAChEnC,KAEc,eAAb+B,EAAI9B,MACNK,EAAaP,EAAUmC,GAAW","sources":["src/library.js"],"sourcesContent":["import './js/blinking-heart.js';\nimport { hidePreloder, showPreloder } from './js/preloder';\nimport './js/modal-movie.js';\n\nhidePreloder();\n\nconst filterRef = document.querySelector('.js-filters');\n\ncreateMarkup(getMovies('watched'));\n\nfilterRef.addEventListener('click', evt => {\n  const target = evt.target.closest('button');\n  if (!target) return false;\n\n  const movieType = target.dataset.type;\n  target\n    .closest('ul')\n    .querySelector('.is-active')\n    .classList.remove('is-active');\n  target.classList.add('is-active');\n  createMarkup(getMovies(movieType));\n});\n\nfunction getMovies(type) {\n  const data = localStorage.getItem(type);\n  if (data) return JSON.parse(data);\n  return [];\n}\n\nfunction createMarkup(data) {\n  const markup = data\n    .map(el => {\n      const date = new Date(el.release_date);\n      let genres_ids = [];\n      // //\n      if (!el.genres?.length) {\n        el.genre_ids.forEach(el => {\n          const arr = filmsApiService.genres_ids_array.genres;\n          arr.forEach(({ id, name }) => {\n            if (id === el) {\n              genres_ids.push(name);\n            }\n          });\n        });\n        genres_ids = genres_ids.slice(0, 2);\n      } else {\n        genres_ids = el.genres.map(({ name }) => name);\n      }\n      //\n      return `<li class=\"gallery__item\" id=\"${el.id}\">\n            <a class=\"film-card\"\">\n                    <img src=\"https://image.tmdb.org/t/p/w500/${\n                      el.poster_path\n                    }\" \n                        class=\"film-poster__img\" loading=\"lazy\" />\n                <div class=\"info\"\">\n                <p class=\"info__title\">${el.title}</p>\n\n                  <p class=\"info__genres\">\n                  ${genres_ids.join(', ')} | ${date.getFullYear()} \n        \n               </p>\n            </div>\n            </a>\n      </li>`;\n    })\n    .join('');\n\n  const movieGallery = document.querySelector('.movie__gallery');\n  movieGallery.innerHTML = markup;\n}\n\nconst handleCloseModal = () => {\n  window.addEventListener('message', evt => {\n    const movieType = document.querySelector('.js-filters .is-active').dataset\n      .type;\n\n    if (evt.data === 'closeModal') {\n      createMarkup(getMovies(movieType));\n    }\n  });\n};\n\nhandleCloseModal();\n"],"names":["parcelRequire","$7NN9c","hidePreloder","$ce3726a01b8ab25a$var$filterRef","document","querySelector","$ce3726a01b8ab25a$var$getMovies","type","data","localStorage","getItem","JSON","parse","$ce3726a01b8ab25a$var$createMarkup","markup","map","el1","date","Date","release_date","genres_ids","genres","length","name","genre_ids","forEach","el","filmsApiService","genres_ids_array","id","push","slice","poster_path","title","join","getFullYear","innerHTML","addEventListener","evt","target","closest","movieType","dataset","classList","remove","add","window"],"version":3,"file":"library.8cb427d8.js.map"}