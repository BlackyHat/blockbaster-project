{"mappings":"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","sources":["src/js/modal-movie.js","src/js/preloder.js"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY_TMDb } from './consts/api_key.js';\nimport { hidePreloder, showPreloder } from './preloder.js';\n//\nconst URL = 'https://api.themoviedb.org/3';\nconst GET_MOVIE_INFO = '/movie/';\nconst URL_GET_IMG = 'https://image.tmdb.org/t/p/w500/';\n\nconst refs = {\n  openModalMovieCard: document.querySelector('[modal-movie-open]'),\n  closeModalMovieBtn: document.querySelector('[modal-movie-close]'),\n  backdrop: document.querySelector('.js-modalMovie__backdrop'),\n\n  targetMovie: document.querySelector('.movie__gallery'),\n  modalCard: document.querySelector('.modalMovie__container'),\n};\n\nrefs.openModalMovieCard.addEventListener('click', onModalMovieOpen);\nrefs.closeModalMovieBtn.addEventListener('click', onModalMovieClose);\nrefs.backdrop.addEventListener('click', onBackdropClose);\nrefs.targetMovie.addEventListener('click', createMovieCard);\n\n// Open/Close Modal\nfunction onModalMovieOpen() {\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', onEscPress);\n}\n\nfunction onModalMovieClose() {\n  document.body.classList.remove('show-modal');\n  window.removeEventListener('keydown', onEscPress);\n}\n\nfunction onBackdropClose(e) {\n  if (e.currentTarget === e.target) {\n    // document.body.classList.remove('show-modal')\n    onModalMovieClose();\n  }\n}\n\nfunction onEscPress(e) {\n  // console.log(e.code);\n  if (e.code === 'Escape') {\n    onModalMovieClose();\n  }\n}\n// Create movieCard\n\nfunction createMovieCard(e) {\n  // if (e.target.closest('li.movie__gallery--items'));\n  const idMovie = e.target.closest('li');\n\n  MovieApiById(idMovie.id);\n  // createMovieCardById(idMovie);\n}\n\nasync function MovieApiById(id) {\n  try {\n    showPreloder();\n    const movieInfo = await axios.get(\n      `${URL}${GET_MOVIE_INFO}${id}?api_key=${API_KEY_TMDb}&language=en-US`\n    );\n    // console.log(movieInfo.data);\n    createMovieCardById(movieInfo);\n    hidePreloder();\n  } catch (error) {\n    console.log(error);\n    hidePreloder();\n  }\n}\n// =====================================================================================================================================\nfunction getMoviesFromLocalStorage() {\n  //watched\n  const saveWatched = localStorage.getItem('watched');\n  const parsWatched = JSON.parse(saveWatched);\n\n  if (parsWatched === null) {\n    return;\n  } else {\n    watchedDb = parsWatched;\n  }\n\n  //Queued\n  const saveQueue = localStorage.getItem('queue');\n  const parsQueue = JSON.parse(saveQueue);\n\n  if (parsQueue === null) {\n    return;\n  } else {\n    queueDb = parsQueue;\n  }\n}\n\nlet watchedDb = [];\nlet queueDb = [];\ngetMoviesFromLocalStorage();\n// add to watched\nfunction addToWatched(obj) {\n  watchedDb.push(obj);\n\n  localStorage.setItem('watched', JSON.stringify(watchedDb));\n}\nfunction removeFromWatched(index) {\n  watchedDb.splice(index, 1);\n\n  localStorage.setItem('watched', JSON.stringify(watchedDb));\n}\n// add to Queue\nfunction addToQueue(obj) {\n  queueDb.push(obj);\n\n  localStorage.setItem('queue', JSON.stringify(queueDb));\n}\n\nfunction removeFromQueue(index) {\n  queueDb.splice(index, 1);\n\n  localStorage.setItem('queue', JSON.stringify(queueDb));\n}\n\n// ==============================================================================================================================\nfunction createMovieCardById(item) {\n  const {\n    poster_path,\n    title,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    genre_ids,\n    overview,\n    id,\n    release_date,\n  } = item.data;\n  // console.log({ poster_path, title, vote_average, vote_count, popularity, original_title, genres, genre_ids, overview });\n  // Movie data for local storage\n  const movieData = {\n    poster_path,\n    title,\n    original_title,\n    genres,\n    genre_ids,\n    id,\n    release_date,\n  };\n\n  currentMovie = movieData;\n  // console.log(movieData);\n\n  const markup = `\n        <div class=\"movie__poster\">\n                <picture class=\"movie__poster--img\">\n                    <img src=\"${URL_GET_IMG}${poster_path}\" alt=${title} class=\"movie-poster__img\" />\n                </picture>\n            </div>\n            <div class=\"movie__about\">\n                <h2 class=\"movie__about--title\">${title}</h2>\n                <table>\n                    <tr>\n                        <td class=\"movie__table-menu\">Vote / Votes</td>\n                        <td class=\"movie__table-number\"><span class=\"average\">${vote_average.toFixed(\n                          1\n                        )}</span> / <span class=\"count\">${Math.round(\n    vote_count\n  )}</span></td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Popularity</td> \n                        <td class=\"movie__table-number\">${popularity.toFixed(\n                          1\n                        )}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Original Title</td>\n                        <td class=\"movie__table-data\">${original_title}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Genre</td>\n                        <td class=\"movie__table-genres\">${genres[0].name}</td>\n                    </tr>\n                </table>\n                <div>\n                    <h3 class=\"movie__about--subtitle\">About</h3>\n                    <p class=\"modal__about--discription\">${overview}</p>\n                </div>\n                <div class=\"modal__buttons\">\n                    <button class=\"modal__button button-watched\" type=\"button\">${changeTextButtonWatched()}</button>\n                    <button class=\"modal__button button-queue\" type=\"button\">${changeTextButtonQueue()}</button>\n                </div>\n            </div>\n        `;\n  refs.modalCard.innerHTML = markup;\n  //  ==================================================================================================================\n\n  const addToWatchedRef = document.querySelector('.button-watched');\n  const addToQueueRef = document.querySelector('.button-queue');\n  addToWatchedRef.addEventListener('click', clickOnWatched);\n  addToQueueRef.addEventListener('click', clickOnQueue);\n  function changeBgColorButton() {\n    const chekMovieId2 = watchedDb.some(movie => movie.id === currentMovie.id);\n    if (!chekMovieId2) {\n      addToWatchedRef.classList.remove('modal__button--watched');\n    } else {\n      addToWatchedRef.classList.add('modal__button--watched');\n    }\n    const chekMovieId1 = queueDb.some(movie => movie.id === currentMovie.id);\n    if (!chekMovieId1) {\n      addToQueueRef.classList.remove('modal__button--watched');\n    } else {\n      addToQueueRef.classList.add('modal__button--watched');\n    }\n  }\n  changeBgColorButton();\n  // =====================================================================================================================\n}\n// ============================================================================================\nlet currentMovie = {};\nfunction clickOnWatched(e) {\n  const chekMovieId = watchedDb.some(movie => movie.id === currentMovie.id);\n  if (!chekMovieId) {\n    addToWatched(currentMovie);\n    e.target.textContent = 'Remove From Watched';\n  } else {\n    const findIndex = watchedDb.findIndex(\n      movie => movie.id === currentMovie.id\n    );\n    removeFromWatched(findIndex);\n    e.target.textContent = 'Add To Watched';\n  }\n}\nfunction clickOnQueue(e) {\n  const chekMovieId = queueDb.some(movie => movie.id === currentMovie.id);\n  if (!chekMovieId) {\n    addToQueue(currentMovie);\n    e.target.textContent = 'Remove From Queue';\n  } else {\n    const findIndex = queueDb.findIndex(movie => movie.id === currentMovie.id);\n    removeFromQueue(findIndex);\n    e.target.textContent = 'Add To Queue';\n  }\n}\n\nfunction changeTextButtonWatched() {\n  const chekMovieId2 = watchedDb.some(movie => movie.id === currentMovie.id);\n  let textButton = '';\n  if (!chekMovieId2) {\n    textButton = 'Add To Watched';\n  } else {\n    textButton = 'Remove From Watched';\n  }\n  return textButton;\n}\n\nfunction changeTextButtonQueue() {\n  const chekMovieId2 = queueDb.some(movie => movie.id === currentMovie.id);\n  let textButton = '';\n  if (!chekMovieId2) {\n    textButton = 'Add To Queue';\n  } else {\n    textButton = 'Remove From Queue';\n  }\n  return textButton;\n}\n\n// =========================================================================================================================\n","const TIME_DELAY = 500;\n\nwindow.addEventListener('load', function () {\n  setTimeout(function () {\n    document.body.classList.add('loaded');\n  }, TIME_DELAY);\n});\n\nexport function showPreloder() {\n  document.body.classList.remove('loaded');\n}\n\nexport function hidePreloder() {\n  setTimeout(function () {\n    document.body.classList.add('loaded');\n  }, TIME_DELAY);\n}\n"],"names":["$2shzp","parcelRequire","$5ae33ba55a0aff3f$export$53df40a8ad8911d5","document","body","classList","remove","$5ae33ba55a0aff3f$export$d1e4b4bc28039aff","setTimeout","add","window","addEventListener","$ddf1b7119a1bbad7$var$refs","openModalMovieCard","querySelector","closeModalMovieBtn","backdrop","targetMovie","modalCard","$ddf1b7119a1bbad7$var$onModalMovieClose","removeEventListener","$ddf1b7119a1bbad7$var$onEscPress","e","code","currentTarget","target","async","id","item","poster_path","title","vote_average","vote_count","popularity","original_title","genres","genre_ids","overview","release_date","data","$ddf1b7119a1bbad7$var$currentMovie","markup","toFixed","Math","round","name","chekMovieId2","$ddf1b7119a1bbad7$var$watchedDb","some","movie","textButton","$ddf1b7119a1bbad7$var$changeTextButtonWatched","$ddf1b7119a1bbad7$var$queueDb","$ddf1b7119a1bbad7$var$changeTextButtonQueue","innerHTML","addToWatchedRef","addToQueueRef","changeBgColorButton","$ddf1b7119a1bbad7$var$clickOnWatched","$ddf1b7119a1bbad7$var$clickOnQueue","$ddf1b7119a1bbad7$var$createMovieCardById","default","get","$OemQu","API_KEY_TMDb","error","console","log","$ddf1b7119a1bbad7$var$MovieApiById","closest","saveWatched","localStorage","getItem","parsWatched","JSON","parse","saveQueue","parsQueue","$ddf1b7119a1bbad7$var$getMoviesFromLocalStorage","findIndex","index","splice","setItem","stringify","textContent","obj","push"],"version":3,"file":"library.de771490.js.map"}