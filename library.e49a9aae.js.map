{"mappings":"AAAA,MAAMA,EAAMC,SAASC,cAAc,iBAEjCC,aAAY,KACVH,EAAII,UAAUC,OAAO,qBAAqB,GACzC,KCFLC,OAAOC,iBAAiB,QAAQ,WAC9BC,YAAW,WACTP,SAASQ,KAAKL,UAAUM,IAAI,S,GAJb,I,IAajBF,YAAW,WACTP,SAASQ,KAAKL,UAAUM,IAAI,S,GAdb,KCKnB,MAAMC,EAAYV,SAASC,cAAc,eAiBzC,SAASU,EAAUC,GACjB,MAAMC,EAAOC,aAAaC,QAAQH,GAClC,OAAIC,EAAaG,KAAKC,MAAMJ,GACrB,E,CAGT,SAASK,EAAaL,GACpB,MAAMM,EAASN,EACZO,KAAIC,IACH,MAAMC,EAAO,IAAIC,KAAKF,EAAGG,cACzB,IAAIC,EAAa,GAejB,OAdKJ,EAAGK,QAAQC,OAWdF,EAAaJ,EAAGK,OAAON,KAAI,EAACQ,KAAEA,KAAWA,KAVzCP,EAAGQ,UAAUC,SAAQC,IACPC,gBAAgBC,iBAAiBP,OACzCI,SAAQ,EAACI,GAAEA,EAAEN,KAAEA,MACbM,IAAOH,GACTN,EAAWU,KAAKP,EAAK,GAEvB,IAEJH,EAAaA,EAAWW,MAAM,EAAG,IAK5B,iCAAiCf,EAAGa,2GAG3Bb,EAAGgB,kKAIgBhB,EAAGiB,8EAGxBb,EAAWc,KAAK,WAAWjB,EAAKkB,kGAKxC,IAEPD,KAAK,IAEavC,SAASC,cAAc,mBAC/BwC,UAAYtB,C,CA5D3BD,EAAaP,EAAU,YAEvBD,EAAUJ,iBAAiB,SAASoC,IAClC,MAAMC,EAASD,EAAIC,OAAOC,QAAQ,UAClC,IAAKD,EAAQ,OAAO,EAEpB,MAAME,EAAYF,EAAOG,QAAQlC,KACjC+B,EACGC,QAAQ,MACR3C,cAAc,cACdE,UAAU4C,OAAO,aACpBJ,EAAOxC,UAAUM,IAAI,aACrBS,EAAaP,EAAUkC,GAAW","sources":["src/js/blinking-heart.js","src/js/preloder.js","src/library.js"],"sourcesContent":["const svg = document.querySelector('.footer__icon');\nfunction blickSvg() {\n  setInterval(() => {\n    svg.classList.toggle('footer__icon-blick');\n  }, 800);\n}\nblickSvg();\n","const TIME_DELAY = 500;\n\nwindow.addEventListener('load', function () {\n  setTimeout(function () {\n    document.body.classList.add('loaded');\n  }, TIME_DELAY);\n});\n\nexport function showPreloder() {\n  document.body.classList.remove('loaded');\n}\n\nexport function hidePreloder() {\n  setTimeout(function () {\n    document.body.classList.add('loaded');\n  }, TIME_DELAY);\n}\n","import './js/blinking-heart.js';\nimport { hidePreloder, showPreloder } from './js/preloder';\n\nhidePreloder();\n\nconst filterRef = document.querySelector('.js-filters');\n\ncreateMarkup(getMovies('watched'));\n\nfilterRef.addEventListener('click', evt => {\n  const target = evt.target.closest('button');\n  if (!target) return false;\n\n  const movieType = target.dataset.type;\n  target\n    .closest('ul')\n    .querySelector('.is-active')\n    .classList.remove('is-active');\n  target.classList.add('is-active');\n  createMarkup(getMovies(movieType));\n});\n\nfunction getMovies(type) {\n  const data = localStorage.getItem(type);\n  if (data) return JSON.parse(data);\n  return [];\n}\n\nfunction createMarkup(data) {\n  const markup = data\n    .map(el => {\n      const date = new Date(el.release_date);\n      let genres_ids = [];\n      if (!el.genres?.length) {\n        el.genre_ids.forEach(el => {\n          const arr = filmsApiService.genres_ids_array.genres;\n          arr.forEach(({ id, name }) => {\n            if (id === el) {\n              genres_ids.push(name);\n            }\n          });\n        });\n        genres_ids = genres_ids.slice(0, 3);\n      } else {\n        genres_ids = el.genres.map(({ name }) => name);\n      }\n\n      return `<li class=\"gallery__item\" id=\"${el.id}\">\n            <a class=\"film-card\"\">\n                    <img src=\"https://image.tmdb.org/t/p/w500/${\n                      el.poster_path\n                    }\" \n                        class=\"film-poster__img\" loading=\"lazy\" />\n                <div class=\"info\"\">\n                <p class=\"info__title\">${el.title}</p>\n\n                  <p class=\"info__genres\">\n                  ${genres_ids.join(', ')} | ${date.getFullYear()} \n        \n               </p>\n            </div>\n            </a>\n      </li>`;\n    })\n    .join('');\n\n  const movieGallery = document.querySelector('.movie__gallery');\n  movieGallery.innerHTML = markup;\n}\n"],"names":["$5ff11c859274f091$var$svg","document","querySelector","setInterval","classList","toggle","window","addEventListener","setTimeout","body","add","$ce3726a01b8ab25a$var$filterRef","$ce3726a01b8ab25a$var$getMovies","type","data","localStorage","getItem","JSON","parse","$ce3726a01b8ab25a$var$createMarkup","markup","map","el1","date","Date","release_date","genres_ids","genres","length","name","genre_ids","forEach","el","filmsApiService","genres_ids_array","id","push","slice","poster_path","title","join","getFullYear","innerHTML","evt","target","closest","movieType","dataset","remove"],"version":3,"file":"library.e49a9aae.js.map"}