{"mappings":"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","sources":["src/index.js","src/js/modal-movie.js","src/js/modal-students.js"],"sourcesContent":["import { getTrendMovies } from './js/films.js';\nimport './js/modal-movie.js';\nimport './js/blinking-heart.js';\nimport './js/modal-students.js';\n\ngetTrendMovies();\n","import axios from 'axios';\nimport { API_KEY_TMDb } from './consts/api_key.js';\nimport { hidePreloder, showPreloder } from './preloder.js';\n//\nconst URL = 'https://api.themoviedb.org/3';\nconst GET_MOVIE_INFO = '/movie/';\nconst URL_GET_IMG = 'https://image.tmdb.org/t/p/w500/';\n\n\n\nconst refs = {\n  openModalMovieCard: document.querySelector('[modal-movie-open]'),\n  closeModalMovieBtn: document.querySelector('[modal-movie-close]'),\n  backdrop: document.querySelector('.js-modalMovie__backdrop'),\n\n  targetMovie: document.querySelector('.movie__gallery'),\n  modalCard: document.querySelector('.modalMovie__container'),\n\n};\n\n\nrefs.openModalMovieCard.addEventListener('click', onModalMovieOpen);\nrefs.closeModalMovieBtn.addEventListener('click', onModalMovieClose);\nrefs.backdrop.addEventListener('click', onBackdropClose); \nrefs.targetMovie.addEventListener('click', createMovieCard);\n\n// Open/Close Modal\nfunction onModalMovieOpen() {\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', onEscPress);\n}\n\nfunction onModalMovieClose() {\n  document.body.classList.remove('show-modal');\n  window.removeEventListener('keydown', onEscPress);\n}\n\nfunction onBackdropClose(e) {\n\n    if (e.currentTarget === e.target) {\n        // document.body.classList.remove('show-modal')\n        onModalMovieClose();\n    }\n}    \n\n\nfunction onEscPress(e) {\n  // console.log(e.code);\n  if (e.code === 'Escape') {\n    onModalMovieClose();\n  }\n}\n// Create movieCard\n\nfunction createMovieCard(e) {\n    // if (e.target.closest('li.movie__gallery--items'));\n    const idMovie = e.target.closest('li');\n    console.log(idMovie.id);\n    \n    MovieApiById(idMovie.id);\n    // createMovieCardById(idMovie);\n}\n\nasync function MovieApiById(id) {\n    try {\n        showPreloder();\n        const movieInfo = await axios.get(`${URL}${GET_MOVIE_INFO}${id}?api_key=${API_KEY_TMDb}&language=en-US`);\n        // console.log(movieInfo.data);\n        createMovieCardById(movieInfo)\n        hidePreloder();\n    } catch (error) {\n      console.log(error);\n      hidePreloder();\n    }\n}\n// =====================================================================================================================================\nfunction getMoviesFromLocalStorage() {\n    //watched\n    const saveWatched = localStorage.getItem(\"watched\");\n    const parsWatched = JSON.parse(saveWatched);\n    \n    if (parsWatched === null) {\n        return\n    }\n    else {\n        watchedDb = parsWatched;  \n    }\n\n    //Queued\n    const saveQueue = localStorage.getItem(\"queue\");\n    const parsQueue = JSON.parse(saveQueue);\n    \n    if (parsQueue === null) {\n        return\n    }\n    else {\n        queueDb = parsQueue;  \n    }\n}\n\nlet watchedDb = [];\nlet queueDb = [];\ngetMoviesFromLocalStorage();\n// add to watched\nfunction addToWatched(obj) {\n    \n    watchedDb.push(obj);\n\n    localStorage.setItem(\"watched\", JSON.stringify(watchedDb))\n}\nfunction removeFromWatched(index) {\n    \n    watchedDb.splice(index, 1);\n\n    localStorage.setItem(\"watched\", JSON.stringify(watchedDb))\n}\n// add to Queue\nfunction addToQueue(obj) {\n\n    queueDb.push(obj);\n\n    localStorage.setItem(\"queue\", JSON.stringify(queueDb))\n}\n\nfunction removeFromQueue(index) {\n    \n    queueDb.splice(index, 1);\n\n    localStorage.setItem(\"queue\", JSON.stringify(queueDb))\n}\n\n\n// ==============================================================================================================================\nfunction createMovieCardById(item) {\n    const { poster_path, title, vote_average, vote_count, popularity, original_title, genres, genre_ids, overview, id, release_date } = item.data;\n    // console.log({ poster_path, title, vote_average, vote_count, popularity, original_title, genres, genre_ids, overview });\n    // Movie data for local storage\n    const movieData = {\n        poster_path,\n        title,\n        vote_average,\n        vote_count,\n        popularity,\n        original_title,\n        genre_ids,\n        overview,\n        id,\n        release_date,\n  }\n  \n  currentMovie = movieData;\n    // console.log(movieData);\n    \n   \n    const markup = `\n        <div class=\"movie__poster\">\n                <picture class=\"movie__poster--img\">\n                    <img src=\"${URL_GET_IMG}${poster_path}\" alt=${title} class=\"movie-poster__img\" />\n                </picture>\n            </div>\n            <div class=\"movie__about\">\n                <h2 class=\"movie__about--title\">${title}</h2>\n                <table>\n                    <tr>\n                        <td class=\"movie__table-menu\">Vote / Votes</td>\n                        <td class=\"movie__table-number\"><span class=\"average\">${vote_average.toFixed(1)}</span> / <span class=\"count\">${Math.round(vote_count)}</span></td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Popularity</td> \n                        <td class=\"movie__table-number\">${popularity.toFixed(1)}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Original Title</td>\n                        <td class=\"movie__table-data\">${original_title}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Genre</td>\n                        <td class=\"movie__table-genres\">${genres[0].name}</td>\n                    </tr>\n                </table>\n                <div>\n                    <h3 class=\"movie__about--subtitle\">About</h3>\n                    <p class=\"modal__about--discription\">${overview}</p>\n                </div>\n                <div class=\"modal__buttons\">\n                    <button class=\"modal__button button-watched\" type=\"button\">${changeTextButtonWatched()}</button>\n                    <button class=\"modal__button button-queue\" type=\"button\">${changeTextButtonQueue()}</button>\n                </div>\n            </div>\n        `;\n  refs.modalCard.innerHTML = markup;\n  //  ==================================================================================================================\n  \n    const addToWatchedRef = document.querySelector('.button-watched');\n    const addToQueueRef = document.querySelector('.button-queue');\n    addToWatchedRef.addEventListener('click', clickOnWatched);\n    addToQueueRef.addEventListener('click', clickOnQueue)\n    function changeBgColorButton() {\n        const chekMovieId2 = watchedDb.some(movie => movie.id === currentMovie.id);\n        if (!chekMovieId2) {\n            addToWatchedRef.classList.remove(\"modal__button--watched\");\n        } else {\n            addToWatchedRef.classList.add(\"modal__button--watched\");\n        }\n        const chekMovieId1 = queueDb.some(movie => movie.id === currentMovie.id);\n        if (!chekMovieId1) {\n            addToQueueRef.classList.remove(\"modal__button--watched\");\n        } else {\n            addToQueueRef.classList.add(\"modal__button--watched\");\n        }\n    }\n    changeBgColorButton()\n// =====================================================================================================================\n}\n// ============================================================================================\nlet currentMovie = {};\nfunction clickOnWatched(e) {\n    const chekMovieId = watchedDb.some(movie => movie.id === currentMovie.id);\n   if (!chekMovieId) {\n    addToWatched(currentMovie)\n    e.target.textContent = 'Remove From Watched'\n   } else {\n    const findIndex = watchedDb.findIndex(movie => movie.id === currentMovie.id);\n    removeFromWatched(findIndex)\n    e.target.textContent = 'Add To Watched'\n    \n   }\n}\nfunction clickOnQueue(e) {\n    const chekMovieId = queueDb.some(movie => movie.id === currentMovie.id);\n    if (!chekMovieId) {\n        addToQueue(currentMovie)\n        e.target.textContent = 'Remove From Queue'\n        \n    } else {\n        const findIndex = queueDb.findIndex(movie => movie.id === currentMovie.id);\n        removeFromQueue(findIndex)\n        e.target.textContent = 'Add To Queue'\n        \n     \n    } \n}\n\nfunction changeTextButtonWatched() {\n    const chekMovieId2 = watchedDb.some(movie => movie.id === currentMovie.id);\n    let textButton = ''\n    if (!chekMovieId2) {\n        \n        textButton = 'Add To Watched'\n    } else {\n        textButton = 'Remove From Watched' \n    }\n    return textButton;\n}\n\nfunction changeTextButtonQueue() {\n    const chekMovieId2 = queueDb.some(movie => movie.id === currentMovie.id);\n    let textButton = ''\n    if (!chekMovieId2) {\n        \n        textButton = 'Add To Queue'\n    } else {\n        textButton = 'Remove From Queue' \n    }\n    return textButton;\n}\n\n\n\n\n\n\n// =========================================================================================================================","// import SimpleBar from 'simplebar';\n// import 'simplebar/dist/simplebar.css';\n\n// new SimpleBar(document.getElementById('bar'));\nconst refs = {\n  openModalBtn: document.querySelector('[data-modal-open]'),\n  closeModalBtn: document.querySelector('[data-modal-close]'),\n  modal: document.querySelector('[data-modal]'),\n  backdrop: document.querySelector('.backdrop'),\n};\n\ndocument.addEventListener('click', e => {\n  if (e.target.id === refs.openModalBtn.id) {\n    e.preventDefault();\n  }\n});\nconsole.log(refs.closeModalBtn);\n\nrefs.openModalBtn.addEventListener('click', openModal);\n\nfunction openModal() {\n  refs.modal.classList.remove('is-hidden');\n  window.addEventListener('keydown', onEscPress);\n  refs.closeModalBtn.addEventListener('click', closeModal);\n  refs.backdrop.addEventListener('click', e => {\n    if (e.target.classList.contains('backdrop')) {\n      closeModal();\n    }\n  });\n}\nfunction closeModal() {\n  refs.modal.classList.add('is-hidden');\n}\nfunction onEscPress(e) {\n  if (e.code === 'Escape') {\n    closeModal();\n    window.removeEventListener('keydown', onEscPress);\n  }\n}\n"],"names":["$k4dh1","parcelRequire","$2shzp","$ddf1b7119a1bbad7$var$refs","openModalMovieCard","document","querySelector","closeModalMovieBtn","backdrop","targetMovie","modalCard","$ddf1b7119a1bbad7$var$onModalMovieClose","body","classList","remove","window","removeEventListener","$ddf1b7119a1bbad7$var$onEscPress","e","code","addEventListener","add","currentTarget","target","idMovie","closest","console","log","id","async","$7NN9c","showPreloder","item","poster_path","title","vote_average","vote_count","popularity","original_title","genres","genre_ids","overview","release_date","data","$ddf1b7119a1bbad7$var$currentMovie","markup","toFixed","Math","round","name","chekMovieId2","$ddf1b7119a1bbad7$var$watchedDb","some","movie","textButton","$ddf1b7119a1bbad7$var$changeTextButtonWatched","$ddf1b7119a1bbad7$var$queueDb","$ddf1b7119a1bbad7$var$changeTextButtonQueue","innerHTML","addToWatchedRef","addToQueueRef","changeBgColorButton","$ddf1b7119a1bbad7$var$clickOnWatched","$ddf1b7119a1bbad7$var$clickOnQueue","$ddf1b7119a1bbad7$var$createMovieCardById","default","get","$OemQu","API_KEY_TMDb","hidePreloder","error","$ddf1b7119a1bbad7$var$MovieApiById","saveWatched","localStorage","getItem","parsWatched","JSON","parse","saveQueue","parsQueue","$ddf1b7119a1bbad7$var$getMoviesFromLocalStorage","findIndex","index","splice","setItem","stringify","textContent","obj","push","$8e415dd749dd7be8$var$refs","openModalBtn","closeModalBtn","modal","$8e415dd749dd7be8$var$closeModal","$8e415dd749dd7be8$var$onEscPress","preventDefault","contains","getTrendMovies"],"version":3,"file":"index.2caa1688.js.map"}