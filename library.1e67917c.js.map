{"mappings":"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","sources":["src/js/modal-movie.js","src/js/preloder.js"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY_TMDb } from './consts/api_key.js';\nimport { hidePreloder, showPreloder } from './preloder.js';\n//\nconst URL = 'https://api.themoviedb.org/3';\nconst GET_MOVIE_INFO = '/movie/';\nconst URL_GET_IMG = 'https://image.tmdb.org/t/p/w500/';\n\nconst refs = {\n  openModalMovieCard: document.querySelector('[modal-movie-open]'),\n  closeModalMovieBtn: document.querySelector('[modal-movie-close]'),\n  backdrop: document.querySelector('.js-modalMovie__backdrop'),\n\n  targetMovie: document.querySelector('.movie__gallery'),\n  modalCard: document.querySelector('.modalMovie__container'),\n};\n\nrefs.openModalMovieCard.addEventListener('click', onModalMovieOpen);\nrefs.closeModalMovieBtn.addEventListener('click', onModalMovieClose);\nrefs.backdrop.addEventListener('click', onBackdropClose);\nrefs.targetMovie.addEventListener('click', createMovieCard);\n\n// Open/Close Modal\nfunction onModalMovieOpen() {\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', onEscPress);\n}\n\nfunction onModalMovieClose() {\n  document.body.classList.remove('show-modal');\n  window.removeEventListener('keydown', onEscPress);\n}\n\nfunction onBackdropClose(e) {\n  if (e.currentTarget === e.target) {\n    // document.body.classList.remove('show-modal')\n    onModalMovieClose();\n  }\n}\n\nfunction onEscPress(e) {\n  // console.log(e.code);\n  if (e.code === 'Escape') {\n    onModalMovieClose();\n  }\n}\n// Create movieCard\n\nfunction createMovieCard(e) {\n  // if (e.target.closest('li.movie__gallery--items'));\n  const idMovie = e.target.closest('li');\n  console.log(idMovie.id);\n\n  MovieApiById(idMovie.id);\n  // createMovieCardById(idMovie);\n}\n\nasync function MovieApiById(id) {\n  try {\n    showPreloder();\n    const movieInfo = await axios.get(\n      `${URL}${GET_MOVIE_INFO}${id}?api_key=${API_KEY_TMDb}&language=en-US`\n    );\n    // console.log(movieInfo.data);\n    createMovieCardById(movieInfo);\n    hidePreloder();\n  } catch (error) {\n    console.log(error);\n    hidePreloder();\n  }\n}\n// =====================================================================================================================================\nfunction getMoviesFromLocalStorage() {\n  //watched\n  const saveWatched = localStorage.getItem('watched');\n  const parsWatched = JSON.parse(saveWatched);\n\n  if (parsWatched === null) {\n    return;\n  } else {\n    watchedDb = parsWatched;\n  }\n\n  //Queued\n  const saveQueue = localStorage.getItem('queue');\n  const parsQueue = JSON.parse(saveQueue);\n\n  if (parsQueue === null) {\n    return;\n  } else {\n    queueDb = parsQueue;\n  }\n}\n\nlet watchedDb = [];\nlet queueDb = [];\ngetMoviesFromLocalStorage();\n// add to watched\nfunction addToWatched(obj) {\n  watchedDb.push(obj);\n\n  localStorage.setItem('watched', JSON.stringify(watchedDb));\n}\nfunction removeFromWatched(index) {\n  watchedDb.splice(index, 1);\n\n  localStorage.setItem('watched', JSON.stringify(watchedDb));\n}\n// add to Queue\nfunction addToQueue(obj) {\n  queueDb.push(obj);\n\n  localStorage.setItem('queue', JSON.stringify(queueDb));\n}\n\nfunction removeFromQueue(index) {\n  queueDb.splice(index, 1);\n\n  localStorage.setItem('queue', JSON.stringify(queueDb));\n}\n\n// ==============================================================================================================================\nfunction createMovieCardById(item) {\n  const {\n    poster_path,\n    title,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    genre_ids,\n    overview,\n    id,\n    release_date,\n  } = item.data;\n  // console.log({ poster_path, title, vote_average, vote_count, popularity, original_title, genres, genre_ids, overview });\n  // Movie data for local storage\n  const movieData = {\n    poster_path,\n    title,\n    original_title,\n    genres,\n    id,\n    release_date,\n  };\n\n  currentMovie = movieData;\n  // console.log(movieData);\n\n  const markup = `\n        <div class=\"movie__poster\">\n                <picture class=\"movie__poster--img\">\n                    <img src=\"${URL_GET_IMG}${poster_path}\" alt=${title} class=\"movie-poster__img\" />\n                </picture>\n            </div>\n            <div class=\"movie__about\">\n                <h2 class=\"movie__about--title\">${title}</h2>\n                <table>\n                    <tr>\n                        <td class=\"movie__table-menu\">Vote / Votes</td>\n                        <td class=\"movie__table-number\"><span class=\"average\">${vote_average.toFixed(\n                          1\n                        )}</span> / <span class=\"count\">${Math.round(\n    vote_count\n  )}</span></td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Popularity</td> \n                        <td class=\"movie__table-number\">${popularity.toFixed(\n                          1\n                        )}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Original Title</td>\n                        <td class=\"movie__table-data\">${original_title}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Genre</td>\n                        <td class=\"movie__table-genres\">${genres[0].name}</td>\n                    </tr>\n                </table>\n                <div>\n                    <h3 class=\"movie__about--subtitle\">About</h3>\n                    <p class=\"modal__about--discription\">${overview}</p>\n                </div>\n                <div class=\"modal__buttons\">\n                    <button class=\"modal__button button-watched\" type=\"button\">${changeTextButtonWatched()}</button>\n                    <button class=\"modal__button button-queue\" type=\"button\">${changeTextButtonQueue()}</button>\n                </div>\n            </div>\n        `;\n  refs.modalCard.innerHTML = markup;\n  //  ==================================================================================================================\n\n  const addToWatchedRef = document.querySelector('.button-watched');\n  const addToQueueRef = document.querySelector('.button-queue');\n  addToWatchedRef.addEventListener('click', clickOnWatched);\n  addToQueueRef.addEventListener('click', clickOnQueue);\n  function changeBgColorButton() {\n    const chekMovieId2 = watchedDb.some(movie => movie.id === currentMovie.id);\n    if (!chekMovieId2) {\n      addToWatchedRef.classList.remove('modal__button--watched');\n    } else {\n      addToWatchedRef.classList.add('modal__button--watched');\n    }\n    const chekMovieId1 = queueDb.some(movie => movie.id === currentMovie.id);\n    if (!chekMovieId1) {\n      addToQueueRef.classList.remove('modal__button--watched');\n    } else {\n      addToQueueRef.classList.add('modal__button--watched');\n    }\n  }\n  changeBgColorButton();\n  // =====================================================================================================================\n}\n// ============================================================================================\nlet currentMovie = {};\nfunction clickOnWatched(e) {\n  const chekMovieId = watchedDb.some(movie => movie.id === currentMovie.id);\n  if (!chekMovieId) {\n    addToWatched(currentMovie);\n    e.target.textContent = 'Remove From Watched';\n  } else {\n    const findIndex = watchedDb.findIndex(\n      movie => movie.id === currentMovie.id\n    );\n    removeFromWatched(findIndex);\n    e.target.textContent = 'Add To Watched';\n  }\n}\nfunction clickOnQueue(e) {\n  const chekMovieId = queueDb.some(movie => movie.id === currentMovie.id);\n  if (!chekMovieId) {\n    addToQueue(currentMovie);\n    e.target.textContent = 'Remove From Queue';\n  } else {\n    const findIndex = queueDb.findIndex(movie => movie.id === currentMovie.id);\n    removeFromQueue(findIndex);\n    e.target.textContent = 'Add To Queue';\n  }\n}\n\nfunction changeTextButtonWatched() {\n  const chekMovieId2 = watchedDb.some(movie => movie.id === currentMovie.id);\n  let textButton = '';\n  if (!chekMovieId2) {\n    textButton = 'Add To Watched';\n  } else {\n    textButton = 'Remove From Watched';\n  }\n  return textButton;\n}\n\nfunction changeTextButtonQueue() {\n  const chekMovieId2 = queueDb.some(movie => movie.id === currentMovie.id);\n  let textButton = '';\n  if (!chekMovieId2) {\n    textButton = 'Add To Queue';\n  } else {\n    textButton = 'Remove From Queue';\n  }\n  return textButton;\n}\n\n// =========================================================================================================================\n","const TIME_DELAY = 500;\n\nwindow.addEventListener('load', function () {\n  setTimeout(function () {\n    document.body.classList.add('loaded');\n  }, TIME_DELAY);\n});\n\nexport function showPreloder() {\n  document.body.classList.remove('loaded');\n}\n\nexport function hidePreloder() {\n  setTimeout(function () {\n    document.body.classList.add('loaded');\n  }, TIME_DELAY);\n}\n"],"names":["$bpxeT","parcelRequire","$21a0c05b89f60739$export$53df40a8ad8911d5","document","body","classList","remove","$21a0c05b89f60739$export$d1e4b4bc28039aff","setTimeout","add","window","addEventListener","$6e635b73d6bcb8f3$var$URL","$6e635b73d6bcb8f3$var$GET_MOVIE_INFO","$6e635b73d6bcb8f3$var$refs","openModalMovieCard","querySelector","closeModalMovieBtn","backdrop","targetMovie","modalCard","$6e635b73d6bcb8f3$var$onModalMovieClose","removeEventListener","$6e635b73d6bcb8f3$var$onEscPress","e","code","$6e635b73d6bcb8f3$var$_MovieApiById","$parcel$interopDefault","$2TvXO","mark","_callee","id","$dIxxU","default","get","concat","$2JYat","API_KEY_TMDb","$6e635b73d6bcb8f3$var$createMovieCardById","_ctx","sent","console","log","t0","apply","this","arguments","currentTarget","target","idMovie","closest","$6e635b73d6bcb8f3$var$MovieApiById","$6e635b73d6bcb8f3$var$watchedDb","$6e635b73d6bcb8f3$var$queueDb","item","_data","data","poster_path","title","vote_average","vote_count","popularity","original_title","genres","overview","genre_ids","release_date","$6e635b73d6bcb8f3$var$currentMovie","markup","toFixed","Math","round","name","chekMovieId2","some","movie","textButton","$6e635b73d6bcb8f3$var$changeTextButtonWatched","$6e635b73d6bcb8f3$var$changeTextButtonQueue","innerHTML","addToWatchedRef","addToQueueRef","$6e635b73d6bcb8f3$var$clickOnWatched","$6e635b73d6bcb8f3$var$clickOnQueue","saveWatched","localStorage","getItem","parsWatched","JSON","parse","saveQueue","parsQueue","$6e635b73d6bcb8f3$var$getMoviesFromLocalStorage","index","obj","findIndex","splice","setItem","stringify","textContent","push"],"version":3,"file":"library.1e67917c.js.map"}