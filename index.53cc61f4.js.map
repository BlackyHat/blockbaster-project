{"mappings":"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","sources":["src/index.js","src/js/modal-movie.js"],"sourcesContent":["import { getTrendMovies } from './js/films.js';\nimport './js/modal-movie.js';\nimport './js/blinking-heart.js';\n// import \"./js/modal-students.js\"\n\ngetTrendMovies();\n","import axios from 'axios';\nimport { API_KEY_TMDb } from './consts/api_key.js';\nimport { hidePreloder, showPreloder } from './preloder.js';\n//\nconst URL = 'https://api.themoviedb.org/3';\nconst GET_MOVIE_INFO = '/movie/';\nconst URL_GET_IMG = 'https://image.tmdb.org/t/p/w500/';\n\n\n\nconst refs = {\n  openModalMovieCard: document.querySelector('[modal-movie-open]'),\n  closeModalMovieBtn: document.querySelector('[modal-movie-close]'),\n  backdrop: document.querySelector('.js-modalMovie__backdrop'),\n\n  targetMovie: document.querySelector('.movie__gallery'),\n  modalCard: document.querySelector('.modalMovie__container'),\n\n};\n\n\nrefs.openModalMovieCard.addEventListener('click', onModalMovieOpen);\nrefs.closeModalMovieBtn.addEventListener('click', onModalMovieClose);\nrefs.backdrop.addEventListener('click', onBackdropClose); \nrefs.targetMovie.addEventListener('click', createMovieCard);\n\n// Open/Close Modal\nfunction onModalMovieOpen() {\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', onEscPress);\n}\n\nfunction onModalMovieClose() {\n  document.body.classList.remove('show-modal');\n  window.removeEventListener('keydown', onEscPress);\n}\n\nfunction onBackdropClose(e) {\n\n    if (e.currentTarget === e.target) {\n        // document.body.classList.remove('show-modal')\n        onModalMovieClose();\n    }\n}    \n\n\nfunction onEscPress(e) {\n  // console.log(e.code);\n  if (e.code === 'Escape') {\n    onModalMovieClose();\n  }\n}\n// Create movieCard\n\nfunction createMovieCard(e) {\n    // if (e.target.closest('li.movie__gallery--items'));\n    const idMovie = e.target.closest('li');\n    console.log(idMovie.id);\n    \n    MovieApiById(idMovie.id);\n    // createMovieCardById(idMovie);\n}\n\nasync function MovieApiById(id) {\n    try {\n        showPreloder();\n        const movieInfo = await axios.get(`${URL}${GET_MOVIE_INFO}${id}?api_key=${API_KEY_TMDb}&language=en-US`);\n        // console.log(movieInfo.data);\n        createMovieCardById(movieInfo)\n        hidePreloder();\n    } catch (error) {\n      console.log(error);\n      hidePreloder();\n    }\n}\n// =====================================================================================================================================\nfunction getMoviesFromLocalStorage() {\n    //watched\n    const saveWatched = localStorage.getItem(\"watched\");\n    const parsWatched = JSON.parse(saveWatched);\n    \n    if (parsWatched === null) {\n        return\n    }\n    else {\n        watchedDb = parsWatched;  \n    }\n\n    //Queued\n    const saveQueue = localStorage.getItem(\"queue\");\n    const parsQueue = JSON.parse(saveQueue);\n    \n    if (parsQueue === null) {\n        return\n    }\n    else {\n        queueDb = parsQueue;  \n    }\n}\n\nlet watchedDb = [];\nlet queueDb = [];\ngetMoviesFromLocalStorage();\n// add to watched\nfunction addToWatched(obj) {\n    \n    watchedDb.push(obj);\n\n    localStorage.setItem(\"watched\", JSON.stringify(watchedDb))\n}\nfunction removeFromWatched(index) {\n    \n    watchedDb.splice(index, 1);\n\n    localStorage.setItem(\"watched\", JSON.stringify(watchedDb))\n}\n// add to Queue\nfunction addToQueue(obj) {\n\n    queueDb.push(obj);\n\n    localStorage.setItem(\"queue\", JSON.stringify(queueDb))\n}\n\nfunction removeFromQueue(index) {\n    \n    queueDb.splice(index, 1);\n\n    localStorage.setItem(\"queue\", JSON.stringify(queueDb))\n}\n\n\n// ==============================================================================================================================\nfunction createMovieCardById(item) {\n    const { poster_path, title, vote_average, vote_count, popularity, original_title, genres, genre_ids, overview, id, release_date } = item.data;\n    // console.log({ poster_path, title, vote_average, vote_count, popularity, original_title, genres, genre_ids, overview });\n    // Movie data for local storage\n    const movieData = {\n        poster_path,\n        title,\n        vote_average,\n        vote_count,\n        popularity,\n        original_title,\n        genre_ids,\n        overview,\n        id,\n        release_date,\n  }\n  \n  currentMovie = movieData;\n    // console.log(movieData);\n    \n   \n    const markup = `\n        <div class=\"movie__poster\">\n                <picture class=\"movie__poster--img\">\n                    <img src=\"${URL_GET_IMG}${poster_path}\" alt=${title} class=\"movie-poster__img\" />\n                </picture>\n            </div>\n            <div class=\"movie__about\">\n                <h2 class=\"movie__about--title\">${title}</h2>\n                <table>\n                    <tr>\n                        <td class=\"movie__table-menu\">Vote / Votes</td>\n                        <td class=\"movie__table-number\"><span class=\"average\">${vote_average.toFixed(1)}</span> / <span class=\"count\">${Math.round(vote_count)}</span></td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Popularity</td> \n                        <td class=\"movie__table-number\">${popularity.toFixed(1)}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Original Title</td>\n                        <td class=\"movie__table-data\">${original_title}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"movie__table-menu\">Genre</td>\n                        <td class=\"movie__table-genres\">${genres[0].name}</td>\n                    </tr>\n                </table>\n                <div>\n                    <h3 class=\"movie__about--subtitle\">About</h3>\n                    <p class=\"modal__about--discription\">${overview}</p>\n                </div>\n                <div class=\"modal__buttons\">\n                    <button class=\"modal__button button-watched\" type=\"button\">${changeTextButtonWatched()}</button>\n                    <button class=\"modal__button button-queue\" type=\"button\">${changeTextButtonQueue()}</button>\n                </div>\n            </div>\n        `;\n  refs.modalCard.innerHTML = markup;\n  //  ==================================================================================================================\n  \n    const addToWatchedRef = document.querySelector('.button-watched');\n    const addToQueueRef = document.querySelector('.button-queue');\n    addToWatchedRef.addEventListener('click', clickOnWatched);\n    addToQueueRef.addEventListener('click', clickOnQueue)\n    function changeBgColorButton() {\n        const chekMovieId2 = watchedDb.some(movie => movie.id === currentMovie.id);\n        if (!chekMovieId2) {\n            addToWatchedRef.classList.remove(\"modal__button--watched\");\n        } else {\n            addToWatchedRef.classList.add(\"modal__button--watched\");\n        }\n        const chekMovieId1 = queueDb.some(movie => movie.id === currentMovie.id);\n        if (!chekMovieId1) {\n            addToQueueRef.classList.remove(\"modal__button--watched\");\n        } else {\n            addToQueueRef.classList.add(\"modal__button--watched\");\n        }\n    }\n    changeBgColorButton()\n// =====================================================================================================================\n}\n// ============================================================================================\nlet currentMovie = {};\nfunction clickOnWatched(e) {\n    const chekMovieId = watchedDb.some(movie => movie.id === currentMovie.id);\n   if (!chekMovieId) {\n    addToWatched(currentMovie)\n    e.target.textContent = 'Remove From Watched'\n   } else {\n    const findIndex = watchedDb.findIndex(movie => movie.id === currentMovie.id);\n    removeFromWatched(findIndex)\n    e.target.textContent = 'Add To Watched'\n    \n   }\n}\nfunction clickOnQueue(e) {\n    const chekMovieId = queueDb.some(movie => movie.id === currentMovie.id);\n    if (!chekMovieId) {\n        addToQueue(currentMovie)\n        e.target.textContent = 'Remove From Queue'\n        \n    } else {\n        const findIndex = queueDb.findIndex(movie => movie.id === currentMovie.id);\n        removeFromQueue(findIndex)\n        e.target.textContent = 'Add To Queue'\n        \n     \n    } \n}\n\nfunction changeTextButtonWatched() {\n    const chekMovieId2 = watchedDb.some(movie => movie.id === currentMovie.id);\n    let textButton = ''\n    if (!chekMovieId2) {\n        \n        textButton = 'Add To Watched'\n    } else {\n        textButton = 'Remove From Watched' \n    }\n    return textButton;\n}\n\nfunction changeTextButtonQueue() {\n    const chekMovieId2 = queueDb.some(movie => movie.id === currentMovie.id);\n    let textButton = ''\n    if (!chekMovieId2) {\n        \n        textButton = 'Add To Queue'\n    } else {\n        textButton = 'Remove From Queue' \n    }\n    return textButton;\n}\n\n\n\n\n\n\n// ========================================================================================================================="],"names":["$6B1UN","parcelRequire","$bpxeT","$6e635b73d6bcb8f3$var$URL","$6e635b73d6bcb8f3$var$GET_MOVIE_INFO","$6e635b73d6bcb8f3$var$refs","openModalMovieCard","document","querySelector","closeModalMovieBtn","backdrop","targetMovie","modalCard","$6e635b73d6bcb8f3$var$onModalMovieClose","body","classList","remove","window","removeEventListener","$6e635b73d6bcb8f3$var$onEscPress","e","code","$6e635b73d6bcb8f3$var$_MovieApiById","$parcel$interopDefault","$2TvXO","mark","_callee","id","$2T02J","showPreloder","$dIxxU","default","get","concat","$2JYat","API_KEY_TMDb","$6e635b73d6bcb8f3$var$createMovieCardById","_ctx","sent","hidePreloder","console","log","t0","apply","this","arguments","addEventListener","add","currentTarget","target","idMovie","closest","$6e635b73d6bcb8f3$var$MovieApiById","$6e635b73d6bcb8f3$var$watchedDb","$6e635b73d6bcb8f3$var$queueDb","item","_data","data","poster_path","title","vote_average","vote_count","popularity","original_title","genres","genre_ids","overview","release_date","$6e635b73d6bcb8f3$var$currentMovie","markup","toFixed","Math","round","name","chekMovieId2","some","movie","textButton","$6e635b73d6bcb8f3$var$changeTextButtonWatched","$6e635b73d6bcb8f3$var$changeTextButtonQueue","innerHTML","addToWatchedRef","addToQueueRef","$6e635b73d6bcb8f3$var$clickOnWatched","$6e635b73d6bcb8f3$var$clickOnQueue","saveWatched","localStorage","getItem","parsWatched","JSON","parse","saveQueue","parsQueue","$6e635b73d6bcb8f3$var$getMoviesFromLocalStorage","index","obj","findIndex","splice","setItem","stringify","textContent","push","getTrendMovies"],"version":3,"file":"index.53cc61f4.js.map"}